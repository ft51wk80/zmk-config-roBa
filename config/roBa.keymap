#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&sl { release-after-ms = <150>; };

&trackball {
    automouse-layer = <1>;
    scroll-layers = <2>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        mkp_exit_AML: mkp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&sl 1>;

            label = "MKP_EXIT_AML";
        };

        hold_key_to0: hold_key_to0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER &to 0>;

            label = "HOLD_KEY_TO0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };

        mt_to0: mt_to0 {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_TO0";
            bindings = <&hold_key_to0>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT {
            bindings = <
&kp Q             &kp L         &kp U         &kp COMMA                    &kp PERIOD                                                              &kp F                   &kp W  &kp R               &kp Y  &kp P
&kp E             &kp I         &kp A         &kp O                        &kp MINUS               &kp DELETE                       &kp ESCAPE     &kp K                   &kp T  &kp N               &kp S  &kp H
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                        &kp F7                  &none                            &kp TAB        &kp G                   &kp D  &lt_to_layer_0 2 M  &kp J  &mt LEFT_SHIFT B
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 4 LANGUAGE_2  &lt_to_layer_0 3 SPACE  &lt_to_layer_0 5 LANGUAGE_1      &kp BACKSPACE  &lt_to_layer_0 6 ENTER                                    &kp LEFT_CONTROL
            >;
        };

        MOUSE {
            bindings = <
&to_layer_0 Q         &to_layer_0 L              &to_layer_0 U              &to_layer_0 COMMA            &to_layer_0 PERIOD                                                                    &to_layer_0 F  &to_layer_0 W      &to_layer_0 R       &to_layer_0 Y      &to_layer_0 P
&to_layer_0 E         &mkp_exit_AML MB2          &mkp_exit_AML MB3          &mkp_exit_AML MB1            &to_layer_0 MINUS       &to_layer_0 DEL                  &to_layer_0 ESCAPE           &to_layer_0 K  &mkp_exit_AML MB1  &mkp_exit_AML MB3   &mkp_exit_AML MB2  &to_layer_0 H
&mt_to0 LEFT_SHIFT Z  &to_layer_0 X              &lt_to_layer_0 2 C         &to_layer_0 V                &to_layer_0 F7          &none                            &to_layer_0 TAB              &to_layer_0 G  &to_layer_0 D      &lt_to_layer_0 2 M  &to_layer_0 J      &mt_to0 LEFT_SHIFT B
&mt_to0 LCTRL LCTRL   &mt_to0 LEFT_WIN LEFT_WIN  &mt_to0 LEFT_ALT LEFT_ALT  &lt_to_layer_0 4 LANGUAGE_1  &lt_to_layer_0 3 SPACE  &lt_to_layer_0 5 LANGUAGE_2      &mt_to0 BACKSPACE BACKSPACE  &to 0                                                                    &mt_to0 LCTRL LCTRL
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans              &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp_exit_AML LCLK  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans              &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                      &trans
            >;
        };

        NUM {
            bindings = <
&none                       &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &none                    &none  &kp F9  &kp F10  &kp F11  &kp F12
&none                       &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &none  &none      &none  &none  &kp F5  &kp F6   &kp F7   &kp F8
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &none  &none      &none  &none  &kp F1  &kp F2   &kp F3   &kp F4
&none                       &none            &none            &none            &none  &none      &none  &none                            &none
            >;
        };

        SYMBOLS {
            bindings = <
&kp EQUAL        &kp SLASH                &kp LEFT_BRACKET  &kp LS(NUMBER_3)  &none                                           &none                 &kp RIGHT_BRACKET    &kp NON_US_HASH      &none                &none
&none            &kp LS(INTERNATIONAL_1)  &kp LS(SLASH)     &kp LS(N9)        &kp LS(EQUAL)  &none          &kp LS(NUMBER_5)  &kp LS(SINGLE_QUOTE)  &kp SQT              &kp SEMICOLON        &kp LS(N2)           &kp LS(N7)
&kp LS(INT_YEN)  &kp LS(NUMBER_4)         &kp LS(N3)        &kp LS(INT1)      &kp LS(N4)     &kp EQUAL      &kp MINUS         &kp LS(SEMI)          &kp LS(RIGHT_BRACE)  &kp LS(NON_US_HASH)  &kp LS(NON_US_HASH)  &kp LS(NUMBER_6)
&none            &none                    &none             &none             &none          &none          &none             &none                                                                                &kp INTERNATIONAL_3
            >;
        };

        ARROWS {
            bindings = <
&none           &none         &none         &none  &none                    &none  &none     &kp UP_ARROW  &none      &none
&none           &none         &none         &none  &none  &none      &none  &none  &kp LEFT  &kp DOWN      &kp RIGHT  &kp LEFT_SHIFT
&kp LEFT_SHIFT  &none         &none         &none  &none  &none      &none  &none  &kp HOME  &kp END       &none      &kp LEFT_SHIFT
&kp LCTRL       &kp LEFT_WIN  &kp LEFT_ALT  &none  &none  &none      &none  &none                                     &none
            >;
        };

        OPERATIONS {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &none  &none                              &kp LC(T)  &kp LEFT_ALT      &kp TAB           &kp LG(TAB)       &kp PRINTSCREEN
&none         &none           &none         &none  &none  &none      &kp LC(KP_PLUS)  &mkp MB4   &kp LA(NUMBER_1)  &kp LA(NUMBER_2)  &kp LA(NUMBER_3)  &kp LA(NUMBER_4)
&none         &none           &none         &none  &none  &none      &kp LC(MINUS)    &mkp MB5   &kp LC(LS(TAB))   &kp LC(TAB)       &kp LC(W)         &kp LC(Q)
&bt BT_CLR    &bt BT_CLR_ALL  &none         &none  &none  &none      &none            &none                                                            &none
            >;
        };

        layer_7 {
            bindings = <
&none          &kp SLASH         &kp LS(N6)  &kp LS(MINUS)  &none                                          &none       &kp LS(COMMA)          &kp LS(PERIOD)       &kp LS(INT3)    &kp INT3
&kp LS(N1)     &kp LS(SLASH)     &kp LS(N8)  &kp LS(N9)     &none       &none          &kp LS(APOSTROPHE)  &kp LS(N5)  &kp LS(RIGHT_BRACKET)  &kp LS(NON_US_HASH)  &kp LS(N2)      &kp LS(N7)
&kp LS(EQUAL)  &kp LEFT_BRACKET  &kp LS(N3)  &kp LS(INT1)   &kp LS(N4)  &kp EQUAL      &kp LS(SEMICOLON)   &kp MINUS   &kp RIGHT_BRACKET      &kp NON_US_HASH      &kp APOSTROPHE  &kp SEMICOLON
&none          &none             &none       &none          &none       &none          &none               &none                                                                   &none
            >;
        };

        layer_8 {
            bindings = <
&kp LCTRL    &kp SLASH       &kp AT_SIGN           &kp HASH               &none                              &none         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &none              &none
&none        &kp UNDERSCORE  &kp QUESTION          &kp EXCLAMATION        &kp TILDE  &none      &kp PERCENT  &kp ASTERISK  &kp COLON         &kp SEMICOLON      &kp DOUBLE_QUOTES  &kp SQT
&kp INT_YEN  &kp DOLLAR      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none      &none      &kp MINUS    &kp PLUS      &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp PIPE           &kp AMPERSAND
&none        &none           &none                 &none                  &none      &none      &none        &none                                                                 &kp NON_US_BACKSLASH
            >;
        };
    };
};
