#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&sl { release-after-ms = <250>; };

&trackball {
    scroll-layers = <5>;
    automouse-layer = <6>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos { compatible = "zmk,combos"; };

    key_overrides {
        compatible = "zmk,key-overrides";

        // Mac時(レイヤー11 ON)に Ctrl系を Command系へ置換
        ko_mac_tab: ko_mac_tab {
            compatible = "zmk,key-override";
            when-layers = <11>;
            from = <&kp LC(TAB)>;
            to = <&kp LG(TAB)>;
        };

        ko_mac_zoom_in: ko_mac_zoom_in {
            compatible = "zmk,key-override";
            when-layers = <11>;
            from = <&kp LC(PLUS)>;
            to = <&kp LG(PLUS)>;
        };

        ko_mac_zoom_out: ko_mac_zoom_out {
            compatible = "zmk,key-override";
            when-layers = <11>;
            from = <&kp LC(MINUS)>;
            to = <&kp LG(MINUS)>;
        };

        ko_mac_close: ko_mac_close {
            compatible = "zmk,key-override";
            when-layers = <11>;
            from = <&kp LC(Q)>;
            to = <&kp LG(Q)>;
        };

        ko_mac_new: ko_mac_new {
            compatible = "zmk,key-override";
            when-layers = <11>;
            from = <&kp LC(W)>;
            to = <&kp LG(W)>;
        };
    };

    macros {
        to_layer_0_WIN: to_layer_0_WIN {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        mkp_exit_AML_WIN: mkp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&sl 6>;

            label = "MKP_EXIT_AML";
        };

        kp_exit_AML: kp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &sl 6>;
            label = "KP_EXIT_AML";
        };

        bt_sel_0_win: bt_sel_0_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0 &tog 11>;
            label = "BT0_WIN_DEFAULT";
        };

        bt_sel_1_mac: bt_sel_1_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1 &tog 11>;
            label = "BT1_MAC_DEFAULT";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0_WIN>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        lt_exit_AML: lt_exit_AML {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_EXIT_AML";
            bindings = <&mo>, <&kp_exit_AML>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT {
            bindings = <
&kp Q             &kp L         &kp U         &kp COMMA                    &kp PERIOD                                                              &kp F                   &kp W  &kp R               &kp Y  &kp P
&kp E             &kp I         &kp A         &kp O                        &kp MINUS               &kp DELETE                       &kp ESCAPE     &kp K                   &kp T  &kp N               &kp S  &kp H
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                        &kp F7                  &none                            &kp TAB        &kp G                   &kp D  &lt_to_layer_0 5 M  &kp J  &mt LEFT_SHIFT B
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 1 LANGUAGE_2  &lt_to_layer_0 2 SPACE  &lt_to_layer_0 3 LANGUAGE_1      &kp BACKSPACE  &lt_to_layer_0 4 ENTER                                    &none
            >;
        };

        SYMBOLS {
            bindings = <
&kp PERCENT      &kp ASTERISK  &kp EQUAL             &kp AMPERSAND          &kp DOLLAR                       &none      &kp LESS_THAN     &kp GREATER_THAN   &kp PIPE           &kp BACKSLASH
&kp EXCLAMATION  &kp QUESTION  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LCTRL   &none      &none     &none      &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE
&kp SLASH        &kp TILDE     &kp AT_SIGN           &kp HASH               &none       &none      &kp PLUS  &kp MINUS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SEMICOLON      &kp COLON
&none            &none         &none                 &none                  &none       &none      &none     &none                                                              &none
            >;
        };

        NUM {
            bindings = <
&none                       &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &none                    &none  &kp F9  &kp F10  &kp F11  &kp F12
&none                       &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &none  &none      &none  &none  &kp F5  &kp F6   &kp F7   &kp F8
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &none  &none      &none  &none  &kp F1  &kp F2   &kp F3   &kp F4
&none                       &none            &none            &none            &none  &none      &none  &none                            &none
            >;
        };

        ARROWS {
            bindings = <
&none           &none           &kp UP_ARROW    &none            &none                    &none  &none     &kp UP_ARROW  &none      &none
&none           &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none  &none      &none  &none  &kp LEFT  &kp DOWN      &kp RIGHT  &none
&kp LEFT_SHIFT  &none           &none           &none            &none  &none      &none  &none  &none     &none         &none      &none
&kp LCTRL       &kp LEFT_WIN    &kp LEFT_ALT    &none            &none  &none      &none  &none                                     &none
            >;
        };

        OPERATIONS {
            bindings = <
&bt_sel_0_win  &bt_sel_1_mac   &none  &none  &none                            &none     &kp LG(TAB)       &kp LC(TAB)       &none             &none
&bt BT_SEL 0   &bt BT_SEL 1    &none  &none  &none  &none      &kp LC(PLUS)   &mkp MB4  &kp LA(NUMBER_1)  &kp LA(NUMBER_2)  &kp LA(NUMBER_3)  &kp LA(NUMBER_4)
&none          &none           &none  &none  &none  &none      &kp LC(MINUS)  &mkp MB5  &kp LC(Q)         &kp LC(W)         &none             &none
&bt BT_CLR     &bt BT_CLR_ALL  &none  &none  &none  &none      &none          &none                                                           &none
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans                  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp_exit_AML_WIN LCLK  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans                  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                          &trans
            >;
        };

        MOUSE {
            bindings = <
&kp_exit_AML Q      &kp_exit_AML L         &kp_exit_AML U         &kp_exit_AML COMMA       &kp_exit_AML PERIOD                                                       &kp_exit_AML F      &kp_exit_AML W         &kp_exit_AML R         &kp_exit_AML Y         &kp_exit_AML P
&kp_exit_AML E      &mkp_exit_AML_WIN MB2  &mkp_exit_AML_WIN MB3  &mkp_exit_AML_WIN MB1    &kp_exit_AML MINUS   &kp_exit_AML DEL             &kp_exit_AML ESCAPE     &kp_exit_AML K      &mkp_exit_AML_WIN MB1  &mkp_exit_AML_WIN MB3  &mkp_exit_AML_WIN MB2  &kp_exit_AML H
&kp_exit_AML Z      &kp_exit_AML X         &lt_exit_AML 5 C       &kp_exit_AML V           &kp_exit_AML F7      &none                        &kp_exit_AML TAB        &kp_exit_AML G      &kp_exit_AML D         &lt_exit_AML 5 M       &kp_exit_AML J         &kp_exit_AML B
&kp_exit_AML LCTRL  &kp_exit_AML LEFT_GUI  &kp_exit_AML LEFT_ALT  &kp_exit_AML LANGUAGE_1  &kp_exit_AML SPACE   &kp_exit_AML LANGUAGE_2      &kp_exit_AML BACKSPACE  &kp_exit_AML ENTER                                                                       &none
            >;
        };
    };
};
